{
    "facebook": {
        "engine": "3", 
        "name": "facebook", 
        "args": {
            "patcherrors": 0, 
            "forcedownload": 0, 
            "noupdate": 0, 
            "days": 10, 
            "remote": 1, 
            "verbose": 0, 
            "forcecopy": 0, 
            "nohelp": 0, 
            "server": "download.sdkbox.com/installer/v1/", 
            "manifest": "manifest.json", 
            "project": "./", 
            "command": "import", 
            "alwaysupdate": 0, 
            "installer": "/home/hienlh/.sdkbox/bin/sdkbox.pyc", 
            "nopatchingcpp": 0, 
            "local": 0, 
            "nopatching": 0, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            5, 
            0, 
            5
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "code": "dependencies { compile 'com.facebook.android:facebook-android-sdk:[4,5)' }\n", 
            "ANDROID_STUDIO_JNI_DIR": "frameworks/runtime-src/proj.android/app/jni/", 
            "lines": [
                "#ifdef SDKBOX_ENABLED", 
                "    sc->addRegisterCallback(register_all_PluginFacebookJS);", 
                "    sc->addRegisterCallback(register_all_PluginFacebookJS_helper);", 
                "#endif"
            ], 
            "COCOS_PROJECT_DIR": "./", 
            "VS_PROJECT_DIR": "n/a", 
            "COCOS_2DX_INSTALLATION_VERSION": "3.17.2", 
            "ANDROID_STUDIO_PROJECT_DIR": "frameworks/runtime-src/proj.android/", 
            "file": "SDKBoxJSHelper.h", 
            "ANDROID_COCOS_PACKAGE_ROOT": "frameworks/runtime-src/proj.android/app/", 
            "source_dir": "${RUNTIME_SRC_ROOT}", 
            "flag_line": "setup_cocos_app_config(${APP_NAME})", 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "3.17.2", 
            "ANDROID_MK": "n/a", 
            "proguard_file": "n/proguard-project.txt", 
            "proguard_rules": "frameworks/runtime-src/proj.android/app/proguard-rules.pro", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "content": "#/****************************************************************************\n# Copyright (c) 2013 cocos2d-x.org\n# Copyright (c) 2014 martell malone\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n#\n# http://www.cocos2d-x.org\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n# ****************************************************************************/\n\ncmake_minimum_required(VERSION 3.6)\n\nset(APP_NAME EatMonster)\n\nproject(${APP_NAME})\n\nset(RUNTIME_SRC_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/frameworks/runtime-src)\nset(COCOS2DX_ROOT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/frameworks/cocos2d-x)\nset(CMAKE_MODULE_PATH ${COCOS2DX_ROOT_PATH}/cmake/Modules/)\n\ninclude(CocosBuildSet)\nset(BUILD_JS_LIBS ON)\nadd_subdirectory(${COCOS2DX_ROOT_PATH}/cocos ${ENGINE_BINARY_PATH}/cocos/core)\n\n# script and source files info, not need to compile\nset(res_main_files\n    \"${CMAKE_CURRENT_SOURCE_DIR}/main.js\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/project.json\"\n    )\nset(res_res_folders\n    \"${CMAKE_CURRENT_SOURCE_DIR}/res\"\n    )\nset(res_src_folders\n    \"${CMAKE_CURRENT_SOURCE_DIR}/src\"\n    )\nset(res_script_folders\n    \"${COCOS2DX_ROOT_PATH}/cocos/scripting/js-bindings/script\"\n    )\nif(APPLE OR VS)\n    cocos_mark_multi_resources(res_main RES_TO \"Resources\" FILES ${res_main_files})\n    cocos_mark_multi_resources(res_res RES_TO \"Resources/res\" FOLDERS ${res_res_folders})\n    cocos_mark_multi_resources(res_src RES_TO \"Resources/src\" FOLDERS ${res_src_folders})\n    cocos_mark_multi_resources(res_script RES_TO \"Resources/script\" FOLDERS ${res_script_folders})\n    set(cc_common_res ${res_main} ${res_res} ${res_src} ${res_script})\nendif()\n\n# record sources, headers\nset(GAME_SOURCE ${RUNTIME_SRC_ROOT}/Classes/AppDelegate.cpp)\nset(GAME_HEADER ${RUNTIME_SRC_ROOT}/Classes/AppDelegate.h)\n\nif(ANDROID)\n    # change APP_NAME to the share library name for Android, it's value depend on AndroidManifest.xml\n    set(APP_NAME cocos2djs)\n    list(APPEND GAME_SOURCE ${RUNTIME_SRC_ROOT}/proj.android/app/jni/hellojavascript/main.cpp)\nelseif(LINUX)\n    list(APPEND GAME_SOURCE ${RUNTIME_SRC_ROOT}/proj.linux/main.cpp)\nelseif(WINDOWS)\n    set(WINDOWS_SRC ${RUNTIME_SRC_ROOT}/proj.win32/main.cpp)\n    list(APPEND WINDOWS_SRC ${RUNTIME_SRC_ROOT}/proj.win32/game.rc)\n    list(APPEND GAME_HEADER\n         ${RUNTIME_SRC_ROOT}/proj.win32/main.h\n         ${RUNTIME_SRC_ROOT}/proj.win32/resource.h\n         )\n    list(APPEND GAME_SOURCE ${WINDOWS_SRC} ${cc_common_res})\nelseif(APPLE)\n    if(IOS)\n        list(APPEND GAME_HEADER\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/AppController.h\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/RootViewController.h\n             )\n        set(APP_UI_RES\n            ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/LaunchScreen.storyboard\n            ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/LaunchScreenBackground.png\n            ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/Images.xcassets\n            )\n        list(APPEND GAME_SOURCE\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/main.m\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/AppController.mm\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/RootViewController.mm\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/Prefix.pch\n             ${APP_UI_RES}\n             )\n    elseif(MACOSX)\n        set(APP_UI_RES\n            ${RUNTIME_SRC_ROOT}/proj.ios_mac/mac/Icon.icns\n            ${RUNTIME_SRC_ROOT}/proj.ios_mac/mac/Info.plist\n            )\n        list(APPEND GAME_SOURCE\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/mac/main.cpp\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/mac/Prefix.pch\n             ${APP_UI_RES}\n             )\n    endif()\n    list(APPEND GAME_SOURCE ${cc_common_res})\nendif()\n\n# PluginShare-JS\n\nif(ANDROID)\n\n    list(APPEND GAME_SOURCE ${RUNTIME_SRC_ROOT}/Classes/PluginShareJS.cpp)\n\n    list(APPEND GAME_SOURCE ${RUNTIME_SRC_ROOT}/Classes/PluginShareJSHelper.cpp)\n\nendif()\n# sdkbox-JS\n\nif(ANDROID)\n\n    list(APPEND GAME_SOURCE ${RUNTIME_SRC_ROOT}/Classes/SDKBoxJSHelper.cpp)\n\nendif()\nset(APP_SRC ${GAME_HEADER} ${GAME_SOURCE})\n\n# mark app complie info and libs info\nif(NOT ANDROID)\n    add_executable(${APP_NAME} ${APP_SRC})\nelse()\n    add_library(${APP_NAME} SHARED ${APP_SRC})\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/platform/android ${ENGINE_BINARY_PATH}/cocos/platform)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive cpp_android_spec -Wl,--no-whole-archive)\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/scripting/js-bindings/proj.android ${ENGINE_BINARY_PATH}/cocos/js-android)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive js_android_spec -Wl,--no-whole-archive)\nendif()\n\ntarget_link_libraries(${APP_NAME} jscocos2d)\ntarget_include_directories(${APP_NAME} PRIVATE ${RUNTIME_SRC_ROOT}/Classes)\n\n# mark app resources, resource will be copy auto after mark\nsetup_cocos_app_config(${APP_NAME})\n# PluginShare\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${RUNTIME_SRC_ROOT}/proj.android/app/jni/PluginShare/)\n    target_link_libraries(${APP_NAME} ext_PluginShare)\nendif()\n# sdkbox\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${RUNTIME_SRC_ROOT}/proj.android/app/jni/sdkbox/)\n    target_link_libraries(${APP_NAME} ext_sdkbox)\nendif()\nif(APPLE)\n    set_target_properties(${APP_NAME} PROPERTIES RESOURCE \"${APP_UI_RES}\")\n    if(MACOSX)\n        set_target_properties(${APP_NAME} PROPERTIES\n                              MACOSX_BUNDLE_INFO_PLIST \"${RUNTIME_SRC_ROOT}/proj.ios_mac/mac/Info.plist\"\n                              )\n    elseif(IOS)\n        cocos_pak_xcode(${APP_NAME} INFO_PLIST \"iOSBundleInfo.plist.in\")\n        set_xcode_property(${APP_NAME} ASSETCATALOG_COMPILER_APPICON_NAME \"AppIcon\")\n        set_xcode_property(${APP_NAME} DEVELOPMENT_TEAM \"\")\n        set_xcode_property(${APP_NAME} CODE_SIGN_IDENTITY \"iPhone Developer\")\n    endif()\nelseif(WINDOWS)\n    cocos_copy_target_dll(${APP_NAME})\nendif()\n# copy resource on linux or WINDOWS\nif(LINUX OR WINDOWS)\n    set(APP_RES_DIR \"$<TARGET_FILE_DIR:${APP_NAME}>/Resources\")\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR} FILES ${res_main_files})\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR}/res FOLDERS ${res_res_folders})\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR}/src FOLDERS ${res_src_folders})\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR}/script FOLDERS ${res_script_folders})\nendif()\n\n", 
            "COCOS_PROJECT_HINT": "frameworks/runtime-src/", 
            "ANDROID_STUDIO_PROPERTIES": "frameworks/runtime-src/proj.android/app/project.properties", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "check_str": "com.facebook.android:facebook-android-sdk", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "frameworks/runtime-src/proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_CLASSES_DIR": "frameworks/runtime-src/Classes/", 
            "XCODE_PROJECT": "frameworks/runtime-src/proj.ios_mac/EatMonster.xcodeproj/project.pbxproj", 
            "ANDROID_STUDIO_MK": "frameworks/runtime-src/proj.android/app/jni/Android.mk", 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "frameworks/runtime-src/proj.android/app/src/org/cocos2dx/javascript/", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "/home/hienlh/Desktop/ccjs/cocos2d-x-3.17.2/", 
            "ANDROID_MANIFEST": "n/a", 
            "ANDROID_STUDIO_MANIFEST": "frameworks/runtime-src/proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "XCODE_PROJECT_DIR": "frameworks/runtime-src/proj.ios_mac/EatMonster.xcodeproj/", 
            "IOS_PROJECT_DIR": "frameworks/runtime-src/proj.ios_mac/", 
            "lang": "JS", 
            "COCOS_BACKUP_DIR": "backup-2019-10-27/", 
            "js_sources": [
                "PluginFacebookJS.cpp", 
                "PluginFacebookJS.hpp", 
                "PluginFacebookJSHelper.cpp", 
                "PluginFacebookJSHelper.h", 
                "SDKBoxJSHelper.cpp", 
                "SDKBoxJSHelper.h"
            ], 
            "name": "PluginFacebook", 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "cmake_file": "CMakeLists.txt", 
            "COCOS_2DX_VERSION": "3.17.2", 
            "ANDROID_PROPERTIES": "n/a", 
            "SDKBOX_PACKAGE_NAME": "facebook", 
            "gradle_file": "frameworks/runtime-src/proj.android/libcocos2dx/build.gradle/", 
            "ANDROID_STUDIO_LIBS_DIR": "frameworks/runtime-src/proj.android/app/libs/", 
            "SDKBOX_PLUGIN_NAME": "Facebook", 
            "ANDROID_LIBS_DIR": "frameworks/runtime-src/proj.android/app/libs/", 
            "COCOS_RESOURCES_DIR": "res/", 
            "APPLICATION_MK": "n/a"
        }
    }, 
    "share": {
        "engine": "3", 
        "name": "share", 
        "args": {
            "patcherrors": 0, 
            "project": "./", 
            "noupdate": 0, 
            "nopatchingcpp": 0, 
            "remote": 1, 
            "verbose": 0, 
            "forcecopy": 0, 
            "nohelp": 0, 
            "days": 10, 
            "server": "download.sdkbox.com/installer/v1/", 
            "forcedownload": 0, 
            "command": "import", 
            "alwaysupdate": 0, 
            "installer": "/home/hienlh/.sdkbox/bin/sdkbox.pyc", 
            "manifest": "manifest.json", 
            "local": 0, 
            "nopatching": 0, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            5, 
            0, 
            5
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "code": "dependencies { compile 'com.twitter.sdk.android:tweet-composer:3.1.1' }\n", 
            "ANDROID_STUDIO_JNI_DIR": "frameworks/runtime-src/proj.android/app/jni/", 
            "lib_project": "frameworks/runtime-src/proj.android/app/libs/twitter-core/", 
            "COCOS_PROJECT_DIR": "./", 
            "VS_PROJECT_DIR": "n/a", 
            "COCOS_2DX_INSTALLATION_VERSION": "3.17.2", 
            "proguard_rules": "frameworks/runtime-src/proj.android/app/proguard-rules.pro", 
            "file": "SDKBoxJSHelper.h", 
            "ANDROID_COCOS_PACKAGE_ROOT": "frameworks/runtime-src/proj.android/app/", 
            "android_jars": [
                "okio-1.9.0.jar", 
                "converter-gson-2.1.0.jar", 
                "picasso-2.5.2.jar", 
                "gson-2.7.jar", 
                "retrofit-2.1.0.jar", 
                "twitter-text-1.14.3.jar", 
                "okhttp-3.4.2.jar"
            ], 
            "COCOS_2DX_VERSION": "3.17.2", 
            "source_dir": "${RUNTIME_SRC_ROOT}", 
            "flag_line": "setup_cocos_app_config(${APP_NAME})", 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "3.17.2", 
            "twitter_bundle_path": "frameworks/runtime-src/proj.ios_mac/TwitterKit.framework/TwitterKitResources.bundle/", 
            "proguard_file": "n/proguard-project.txt", 
            "ANDROID_STUDIO_PROJECT_DIR": "frameworks/runtime-src/proj.android/", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "content": "#/****************************************************************************\n# Copyright (c) 2013 cocos2d-x.org\n# Copyright (c) 2014 martell malone\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n#\n# http://www.cocos2d-x.org\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n# ****************************************************************************/\n\ncmake_minimum_required(VERSION 3.6)\n\nset(APP_NAME EatMonster)\n\nproject(${APP_NAME})\n\nset(RUNTIME_SRC_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/frameworks/runtime-src)\nset(COCOS2DX_ROOT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/frameworks/cocos2d-x)\nset(CMAKE_MODULE_PATH ${COCOS2DX_ROOT_PATH}/cmake/Modules/)\n\ninclude(CocosBuildSet)\nset(BUILD_JS_LIBS ON)\nadd_subdirectory(${COCOS2DX_ROOT_PATH}/cocos ${ENGINE_BINARY_PATH}/cocos/core)\n\n# script and source files info, not need to compile\nset(res_main_files\n    \"${CMAKE_CURRENT_SOURCE_DIR}/main.js\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/project.json\"\n    )\nset(res_res_folders\n    \"${CMAKE_CURRENT_SOURCE_DIR}/res\"\n    )\nset(res_src_folders\n    \"${CMAKE_CURRENT_SOURCE_DIR}/src\"\n    )\nset(res_script_folders\n    \"${COCOS2DX_ROOT_PATH}/cocos/scripting/js-bindings/script\"\n    )\nif(APPLE OR VS)\n    cocos_mark_multi_resources(res_main RES_TO \"Resources\" FILES ${res_main_files})\n    cocos_mark_multi_resources(res_res RES_TO \"Resources/res\" FOLDERS ${res_res_folders})\n    cocos_mark_multi_resources(res_src RES_TO \"Resources/src\" FOLDERS ${res_src_folders})\n    cocos_mark_multi_resources(res_script RES_TO \"Resources/script\" FOLDERS ${res_script_folders})\n    set(cc_common_res ${res_main} ${res_res} ${res_src} ${res_script})\nendif()\n\n# record sources, headers\nset(GAME_SOURCE ${RUNTIME_SRC_ROOT}/Classes/AppDelegate.cpp)\nset(GAME_HEADER ${RUNTIME_SRC_ROOT}/Classes/AppDelegate.h)\n\nif(ANDROID)\n    # change APP_NAME to the share library name for Android, it's value depend on AndroidManifest.xml\n    set(APP_NAME cocos2djs)\n    list(APPEND GAME_SOURCE ${RUNTIME_SRC_ROOT}/proj.android/app/jni/hellojavascript/main.cpp)\nelseif(LINUX)\n    list(APPEND GAME_SOURCE ${RUNTIME_SRC_ROOT}/proj.linux/main.cpp)\nelseif(WINDOWS)\n    set(WINDOWS_SRC ${RUNTIME_SRC_ROOT}/proj.win32/main.cpp)\n    list(APPEND WINDOWS_SRC ${RUNTIME_SRC_ROOT}/proj.win32/game.rc)\n    list(APPEND GAME_HEADER\n         ${RUNTIME_SRC_ROOT}/proj.win32/main.h\n         ${RUNTIME_SRC_ROOT}/proj.win32/resource.h\n         )\n    list(APPEND GAME_SOURCE ${WINDOWS_SRC} ${cc_common_res})\nelseif(APPLE)\n    if(IOS)\n        list(APPEND GAME_HEADER\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/AppController.h\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/RootViewController.h\n             )\n        set(APP_UI_RES\n            ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/LaunchScreen.storyboard\n            ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/LaunchScreenBackground.png\n            ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/Images.xcassets\n            )\n        list(APPEND GAME_SOURCE\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/main.m\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/AppController.mm\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/RootViewController.mm\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/ios/Prefix.pch\n             ${APP_UI_RES}\n             )\n    elseif(MACOSX)\n        set(APP_UI_RES\n            ${RUNTIME_SRC_ROOT}/proj.ios_mac/mac/Icon.icns\n            ${RUNTIME_SRC_ROOT}/proj.ios_mac/mac/Info.plist\n            )\n        list(APPEND GAME_SOURCE\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/mac/main.cpp\n             ${RUNTIME_SRC_ROOT}/proj.ios_mac/mac/Prefix.pch\n             ${APP_UI_RES}\n             )\n    endif()\n    list(APPEND GAME_SOURCE ${cc_common_res})\nendif()\n\nset(APP_SRC ${GAME_HEADER} ${GAME_SOURCE})\n\n# mark app complie info and libs info\nif(NOT ANDROID)\n    add_executable(${APP_NAME} ${APP_SRC})\nelse()\n    add_library(${APP_NAME} SHARED ${APP_SRC})\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/platform/android ${ENGINE_BINARY_PATH}/cocos/platform)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive cpp_android_spec -Wl,--no-whole-archive)\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/scripting/js-bindings/proj.android ${ENGINE_BINARY_PATH}/cocos/js-android)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive js_android_spec -Wl,--no-whole-archive)\nendif()\n\ntarget_link_libraries(${APP_NAME} jscocos2d)\ntarget_include_directories(${APP_NAME} PRIVATE ${RUNTIME_SRC_ROOT}/Classes)\n\n# mark app resources, resource will be copy auto after mark\nsetup_cocos_app_config(${APP_NAME})\nif(APPLE)\n    set_target_properties(${APP_NAME} PROPERTIES RESOURCE \"${APP_UI_RES}\")\n    if(MACOSX)\n        set_target_properties(${APP_NAME} PROPERTIES\n                              MACOSX_BUNDLE_INFO_PLIST \"${RUNTIME_SRC_ROOT}/proj.ios_mac/mac/Info.plist\"\n                              )\n    elseif(IOS)\n        cocos_pak_xcode(${APP_NAME} INFO_PLIST \"iOSBundleInfo.plist.in\")\n        set_xcode_property(${APP_NAME} ASSETCATALOG_COMPILER_APPICON_NAME \"AppIcon\")\n        set_xcode_property(${APP_NAME} DEVELOPMENT_TEAM \"\")\n        set_xcode_property(${APP_NAME} CODE_SIGN_IDENTITY \"iPhone Developer\")\n    endif()\nelseif(WINDOWS)\n    cocos_copy_target_dll(${APP_NAME})\nendif()\n# copy resource on linux or WINDOWS\nif(LINUX OR WINDOWS)\n    set(APP_RES_DIR \"$<TARGET_FILE_DIR:${APP_NAME}>/Resources\")\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR} FILES ${res_main_files})\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR}/res FOLDERS ${res_res_folders})\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR}/src FOLDERS ${res_src_folders})\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR}/script FOLDERS ${res_script_folders})\nendif()\n\n", 
            "COCOS_PROJECT_HINT": "frameworks/runtime-src/", 
            "ANDROID_STUDIO_PROPERTIES": "frameworks/runtime-src/proj.android/app/project.properties/", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "check_str": "com.twitter.sdk.android:tweet-composer", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "frameworks/runtime-src/proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_CLASSES_DIR": "frameworks/runtime-src/Classes/", 
            "XCODE_PROJECT": "frameworks/runtime-src/proj.ios_mac/EatMonster.xcodeproj/project.pbxproj", 
            "lang": "JS", 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "frameworks/runtime-src/proj.android/app/src/org/cocos2dx/javascript/", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "/home/hienlh/Desktop/ccjs/cocos2d-x-3.17.2/", 
            "ANDROID_MANIFEST": "n/a", 
            "lib_folder_path": "frameworks/runtime-src/proj.android/app/libs/twittercore/", 
            "ANDROID_STUDIO_MANIFEST": "frameworks/runtime-src/proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "js_sources": [
                "PluginShareJS.cpp", 
                "PluginShareJS.hpp", 
                "PluginShareJSHelper.cpp", 
                "PluginShareJSHelper.h", 
                "SDKBoxJSHelper.cpp", 
                "SDKBoxJSHelper.h"
            ], 
            "IOS_PROJECT_DIR": "frameworks/runtime-src/proj.ios_mac/", 
            "ANDROID_STUDIO_MK": "frameworks/runtime-src/proj.android/app/jni/Android.mk", 
            "XCODE_PROJECT_DIR": "frameworks/runtime-src/proj.ios_mac/EatMonster.xcodeproj/", 
            "name": "PluginShare", 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "cmake_file": "CMakeLists.txt", 
            "COCOS_BACKUP_DIR": "backup-2019-10-27/", 
            "ANDROID_PROPERTIES": "n/a", 
            "SDKBOX_PACKAGE_NAME": "share", 
            "COCOS_RESOURCES_DIR": "res/", 
            "ANDROID_STUDIO_LIBS_DIR": "frameworks/runtime-src/proj.android/app/libs/", 
            "SDKBOX_PLUGIN_NAME": "Share", 
            "ANDROID_LIBS_DIR": "frameworks/runtime-src/proj.android/app/libs/", 
            "lines": [
                "#ifdef SDKBOX_ENABLED", 
                "    sc->addRegisterCallback(register_all_PluginShareJS);", 
                "    sc->addRegisterCallback(register_all_PluginShareJS_helper);", 
                "#endif", 
                "#ifdef SDKBOX_ENABLED", 
                "    sc->addRegisterCallback(register_all_SDKBoxJS_helper);", 
                "#endif"
            ], 
            "ANDROID_MK": "n/a", 
            "APPLICATION_MK": "n/a"
        }
    }
}